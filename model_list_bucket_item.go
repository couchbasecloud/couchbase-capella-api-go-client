/*
Couchbase Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package couchbasecloud

import (
	"encoding/json"
)

// ListBucketItem struct for ListBucketItem
type ListBucketItem struct {
	Name string `json:"name"`
	MemoryQuota int32 `json:"memoryQuota"`
	Replicas int32 `json:"replicas"`
	ConflictResolution ConflictResolution `json:"conflictResolution"`
	Status string `json:"status"`
}

// NewListBucketItem instantiates a new ListBucketItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListBucketItem(name string, memoryQuota int32, replicas int32, conflictResolution ConflictResolution, status string) *ListBucketItem {
	this := ListBucketItem{}
	this.Name = name
	this.MemoryQuota = memoryQuota
	this.Replicas = replicas
	this.ConflictResolution = conflictResolution
	this.Status = status
	return &this
}

// NewListBucketItemWithDefaults instantiates a new ListBucketItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListBucketItemWithDefaults() *ListBucketItem {
	this := ListBucketItem{}
	var conflictResolution ConflictResolution = SEQNO
	this.ConflictResolution = conflictResolution
	return &this
}

// GetName returns the Name field value
func (o *ListBucketItem) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ListBucketItem) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ListBucketItem) SetName(v string) {
	o.Name = v
}

// GetMemoryQuota returns the MemoryQuota field value
func (o *ListBucketItem) GetMemoryQuota() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MemoryQuota
}

// GetMemoryQuotaOk returns a tuple with the MemoryQuota field value
// and a boolean to check if the value has been set.
func (o *ListBucketItem) GetMemoryQuotaOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.MemoryQuota, true
}

// SetMemoryQuota sets field value
func (o *ListBucketItem) SetMemoryQuota(v int32) {
	o.MemoryQuota = v
}

// GetReplicas returns the Replicas field value
func (o *ListBucketItem) GetReplicas() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Replicas
}

// GetReplicasOk returns a tuple with the Replicas field value
// and a boolean to check if the value has been set.
func (o *ListBucketItem) GetReplicasOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Replicas, true
}

// SetReplicas sets field value
func (o *ListBucketItem) SetReplicas(v int32) {
	o.Replicas = v
}

// GetConflictResolution returns the ConflictResolution field value
func (o *ListBucketItem) GetConflictResolution() ConflictResolution {
	if o == nil {
		var ret ConflictResolution
		return ret
	}

	return o.ConflictResolution
}

// GetConflictResolutionOk returns a tuple with the ConflictResolution field value
// and a boolean to check if the value has been set.
func (o *ListBucketItem) GetConflictResolutionOk() (*ConflictResolution, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ConflictResolution, true
}

// SetConflictResolution sets field value
func (o *ListBucketItem) SetConflictResolution(v ConflictResolution) {
	o.ConflictResolution = v
}

// GetStatus returns the Status field value
func (o *ListBucketItem) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *ListBucketItem) GetStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *ListBucketItem) SetStatus(v string) {
	o.Status = v
}

func (o ListBucketItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["memoryQuota"] = o.MemoryQuota
	}
	if true {
		toSerialize["replicas"] = o.Replicas
	}
	if true {
		toSerialize["conflictResolution"] = o.ConflictResolution
	}
	if true {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableListBucketItem struct {
	value *ListBucketItem
	isSet bool
}

func (v NullableListBucketItem) Get() *ListBucketItem {
	return v.value
}

func (v *NullableListBucketItem) Set(val *ListBucketItem) {
	v.value = val
	v.isSet = true
}

func (v NullableListBucketItem) IsSet() bool {
	return v.isSet
}

func (v *NullableListBucketItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListBucketItem(val *ListBucketItem) *NullableListBucketItem {
	return &NullableListBucketItem{value: val, isSet: true}
}

func (v NullableListBucketItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListBucketItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


