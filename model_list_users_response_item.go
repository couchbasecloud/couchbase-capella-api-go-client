/*
Couchbase Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package couchbasecapella

import (
	"encoding/json"
)

// ListUsersResponseItem struct for ListUsersResponseItem
type ListUsersResponseItem struct {
	Id string `json:"id"`
	Name string `json:"name"`
	Email string `json:"email"`
}

// NewListUsersResponseItem instantiates a new ListUsersResponseItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListUsersResponseItem(id string, name string, email string) *ListUsersResponseItem {
	this := ListUsersResponseItem{}
	this.Id = id
	this.Name = name
	this.Email = email
	return &this
}

// NewListUsersResponseItemWithDefaults instantiates a new ListUsersResponseItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListUsersResponseItemWithDefaults() *ListUsersResponseItem {
	this := ListUsersResponseItem{}
	return &this
}

// GetId returns the Id field value
func (o *ListUsersResponseItem) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ListUsersResponseItem) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ListUsersResponseItem) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *ListUsersResponseItem) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ListUsersResponseItem) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ListUsersResponseItem) SetName(v string) {
	o.Name = v
}

// GetEmail returns the Email field value
func (o *ListUsersResponseItem) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *ListUsersResponseItem) GetEmailOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *ListUsersResponseItem) SetEmail(v string) {
	o.Email = v
}

func (o ListUsersResponseItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["email"] = o.Email
	}
	return json.Marshal(toSerialize)
}

type NullableListUsersResponseItem struct {
	value *ListUsersResponseItem
	isSet bool
}

func (v NullableListUsersResponseItem) Get() *ListUsersResponseItem {
	return v.value
}

func (v *NullableListUsersResponseItem) Set(val *ListUsersResponseItem) {
	v.value = val
	v.isSet = true
}

func (v NullableListUsersResponseItem) IsSet() bool {
	return v.isSet
}

func (v *NullableListUsersResponseItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListUsersResponseItem(val *ListUsersResponseItem) *NullableListUsersResponseItem {
	return &NullableListUsersResponseItem{value: val, isSet: true}
}

func (v NullableListUsersResponseItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListUsersResponseItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


