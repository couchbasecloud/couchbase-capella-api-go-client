/*
Couchbase Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package couchbasecloud

import (
	"encoding/json"
)

// ListDatabaseUsersResponseItem struct for ListDatabaseUsersResponseItem
type ListDatabaseUsersResponseItem struct {
	// Organization user ID Database user is attached to 
	UserId *string `json:"userId,omitempty"`
	Username string `json:"username"`
	Access []BucketRole `json:"access"`
}

// NewListDatabaseUsersResponseItem instantiates a new ListDatabaseUsersResponseItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListDatabaseUsersResponseItem(username string, access []BucketRole) *ListDatabaseUsersResponseItem {
	this := ListDatabaseUsersResponseItem{}
	this.Username = username
	this.Access = access
	return &this
}

// NewListDatabaseUsersResponseItemWithDefaults instantiates a new ListDatabaseUsersResponseItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListDatabaseUsersResponseItemWithDefaults() *ListDatabaseUsersResponseItem {
	this := ListDatabaseUsersResponseItem{}
	return &this
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *ListDatabaseUsersResponseItem) GetUserId() string {
	if o == nil || o.UserId == nil {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListDatabaseUsersResponseItem) GetUserIdOk() (*string, bool) {
	if o == nil || o.UserId == nil {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *ListDatabaseUsersResponseItem) HasUserId() bool {
	if o != nil && o.UserId != nil {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *ListDatabaseUsersResponseItem) SetUserId(v string) {
	o.UserId = &v
}

// GetUsername returns the Username field value
func (o *ListDatabaseUsersResponseItem) GetUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *ListDatabaseUsersResponseItem) GetUsernameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Username, true
}

// SetUsername sets field value
func (o *ListDatabaseUsersResponseItem) SetUsername(v string) {
	o.Username = v
}

// GetAccess returns the Access field value
func (o *ListDatabaseUsersResponseItem) GetAccess() []BucketRole {
	if o == nil {
		var ret []BucketRole
		return ret
	}

	return o.Access
}

// GetAccessOk returns a tuple with the Access field value
// and a boolean to check if the value has been set.
func (o *ListDatabaseUsersResponseItem) GetAccessOk() (*[]BucketRole, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Access, true
}

// SetAccess sets field value
func (o *ListDatabaseUsersResponseItem) SetAccess(v []BucketRole) {
	o.Access = v
}

func (o ListDatabaseUsersResponseItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.UserId != nil {
		toSerialize["userId"] = o.UserId
	}
	if true {
		toSerialize["username"] = o.Username
	}
	if true {
		toSerialize["access"] = o.Access
	}
	return json.Marshal(toSerialize)
}

type NullableListDatabaseUsersResponseItem struct {
	value *ListDatabaseUsersResponseItem
	isSet bool
}

func (v NullableListDatabaseUsersResponseItem) Get() *ListDatabaseUsersResponseItem {
	return v.value
}

func (v *NullableListDatabaseUsersResponseItem) Set(val *ListDatabaseUsersResponseItem) {
	v.value = val
	v.isSet = true
}

func (v NullableListDatabaseUsersResponseItem) IsSet() bool {
	return v.isSet
}

func (v *NullableListDatabaseUsersResponseItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListDatabaseUsersResponseItem(val *ListDatabaseUsersResponseItem) *NullableListDatabaseUsersResponseItem {
	return &NullableListDatabaseUsersResponseItem{value: val, isSet: true}
}

func (v NullableListDatabaseUsersResponseItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListDatabaseUsersResponseItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


