/*
Couchbase Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package couchbasecapella

import (
	"encoding/json"
)

// V3ClusterStorage struct for V3ClusterStorage
type V3ClusterStorage struct {
	Type string `json:"type"`
	IOPS int32 `json:"IOPS"`
	Size int32 `json:"size"`
}

// NewV3ClusterStorage instantiates a new V3ClusterStorage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV3ClusterStorage(type_ string, iOPS int32, size int32) *V3ClusterStorage {
	this := V3ClusterStorage{}
	this.Type = type_
	this.IOPS = iOPS
	this.Size = size
	return &this
}

// NewV3ClusterStorageWithDefaults instantiates a new V3ClusterStorage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV3ClusterStorageWithDefaults() *V3ClusterStorage {
	this := V3ClusterStorage{}
	return &this
}

// GetType returns the Type field value
func (o *V3ClusterStorage) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *V3ClusterStorage) GetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *V3ClusterStorage) SetType(v string) {
	o.Type = v
}

// GetIOPS returns the IOPS field value
func (o *V3ClusterStorage) GetIOPS() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.IOPS
}

// GetIOPSOk returns a tuple with the IOPS field value
// and a boolean to check if the value has been set.
func (o *V3ClusterStorage) GetIOPSOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.IOPS, true
}

// SetIOPS sets field value
func (o *V3ClusterStorage) SetIOPS(v int32) {
	o.IOPS = v
}

// GetSize returns the Size field value
func (o *V3ClusterStorage) GetSize() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Size
}

// GetSizeOk returns a tuple with the Size field value
// and a boolean to check if the value has been set.
func (o *V3ClusterStorage) GetSizeOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Size, true
}

// SetSize sets field value
func (o *V3ClusterStorage) SetSize(v int32) {
	o.Size = v
}

func (o V3ClusterStorage) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["IOPS"] = o.IOPS
	}
	if true {
		toSerialize["size"] = o.Size
	}
	return json.Marshal(toSerialize)
}

type NullableV3ClusterStorage struct {
	value *V3ClusterStorage
	isSet bool
}

func (v NullableV3ClusterStorage) Get() *V3ClusterStorage {
	return v.value
}

func (v *NullableV3ClusterStorage) Set(val *V3ClusterStorage) {
	v.value = val
	v.isSet = true
}

func (v NullableV3ClusterStorage) IsSet() bool {
	return v.isSet
}

func (v *NullableV3ClusterStorage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV3ClusterStorage(val *V3ClusterStorage) *NullableV3ClusterStorage {
	return &NullableV3ClusterStorage{value: val, isSet: true}
}

func (v NullableV3ClusterStorage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV3ClusterStorage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


