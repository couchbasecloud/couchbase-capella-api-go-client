/*
Couchbase Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package couchbasecapella

import (
	"encoding/json"
)

// CursorPages struct for CursorPages
type CursorPages struct {
	// Current page starting from 1.
	Page *int32 `json:"page,omitempty"`
	// Next page number, it is not set on the last page. 
	Next *int32 `json:"next,omitempty"`
	// Previous page number, it is not set on the first page. 
	Previous *int32 `json:"previous,omitempty"`
	// Last page number.
	Last *int32 `json:"last,omitempty"`
	// How many items are displayed in the page.
	PerPage *int32 `json:"perPage,omitempty"`
	// Total items found by the given query.
	TotalItems int32 `json:"totalItems"`
}

// NewCursorPages instantiates a new CursorPages object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCursorPages(totalItems int32) *CursorPages {
	this := CursorPages{}
	this.TotalItems = totalItems
	return &this
}

// NewCursorPagesWithDefaults instantiates a new CursorPages object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCursorPagesWithDefaults() *CursorPages {
	this := CursorPages{}
	return &this
}

// GetPage returns the Page field value if set, zero value otherwise.
func (o *CursorPages) GetPage() int32 {
	if o == nil || o.Page == nil {
		var ret int32
		return ret
	}
	return *o.Page
}

// GetPageOk returns a tuple with the Page field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CursorPages) GetPageOk() (*int32, bool) {
	if o == nil || o.Page == nil {
		return nil, false
	}
	return o.Page, true
}

// HasPage returns a boolean if a field has been set.
func (o *CursorPages) HasPage() bool {
	if o != nil && o.Page != nil {
		return true
	}

	return false
}

// SetPage gets a reference to the given int32 and assigns it to the Page field.
func (o *CursorPages) SetPage(v int32) {
	o.Page = &v
}

// GetNext returns the Next field value if set, zero value otherwise.
func (o *CursorPages) GetNext() int32 {
	if o == nil || o.Next == nil {
		var ret int32
		return ret
	}
	return *o.Next
}

// GetNextOk returns a tuple with the Next field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CursorPages) GetNextOk() (*int32, bool) {
	if o == nil || o.Next == nil {
		return nil, false
	}
	return o.Next, true
}

// HasNext returns a boolean if a field has been set.
func (o *CursorPages) HasNext() bool {
	if o != nil && o.Next != nil {
		return true
	}

	return false
}

// SetNext gets a reference to the given int32 and assigns it to the Next field.
func (o *CursorPages) SetNext(v int32) {
	o.Next = &v
}

// GetPrevious returns the Previous field value if set, zero value otherwise.
func (o *CursorPages) GetPrevious() int32 {
	if o == nil || o.Previous == nil {
		var ret int32
		return ret
	}
	return *o.Previous
}

// GetPreviousOk returns a tuple with the Previous field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CursorPages) GetPreviousOk() (*int32, bool) {
	if o == nil || o.Previous == nil {
		return nil, false
	}
	return o.Previous, true
}

// HasPrevious returns a boolean if a field has been set.
func (o *CursorPages) HasPrevious() bool {
	if o != nil && o.Previous != nil {
		return true
	}

	return false
}

// SetPrevious gets a reference to the given int32 and assigns it to the Previous field.
func (o *CursorPages) SetPrevious(v int32) {
	o.Previous = &v
}

// GetLast returns the Last field value if set, zero value otherwise.
func (o *CursorPages) GetLast() int32 {
	if o == nil || o.Last == nil {
		var ret int32
		return ret
	}
	return *o.Last
}

// GetLastOk returns a tuple with the Last field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CursorPages) GetLastOk() (*int32, bool) {
	if o == nil || o.Last == nil {
		return nil, false
	}
	return o.Last, true
}

// HasLast returns a boolean if a field has been set.
func (o *CursorPages) HasLast() bool {
	if o != nil && o.Last != nil {
		return true
	}

	return false
}

// SetLast gets a reference to the given int32 and assigns it to the Last field.
func (o *CursorPages) SetLast(v int32) {
	o.Last = &v
}

// GetPerPage returns the PerPage field value if set, zero value otherwise.
func (o *CursorPages) GetPerPage() int32 {
	if o == nil || o.PerPage == nil {
		var ret int32
		return ret
	}
	return *o.PerPage
}

// GetPerPageOk returns a tuple with the PerPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CursorPages) GetPerPageOk() (*int32, bool) {
	if o == nil || o.PerPage == nil {
		return nil, false
	}
	return o.PerPage, true
}

// HasPerPage returns a boolean if a field has been set.
func (o *CursorPages) HasPerPage() bool {
	if o != nil && o.PerPage != nil {
		return true
	}

	return false
}

// SetPerPage gets a reference to the given int32 and assigns it to the PerPage field.
func (o *CursorPages) SetPerPage(v int32) {
	o.PerPage = &v
}

// GetTotalItems returns the TotalItems field value
func (o *CursorPages) GetTotalItems() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TotalItems
}

// GetTotalItemsOk returns a tuple with the TotalItems field value
// and a boolean to check if the value has been set.
func (o *CursorPages) GetTotalItemsOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TotalItems, true
}

// SetTotalItems sets field value
func (o *CursorPages) SetTotalItems(v int32) {
	o.TotalItems = v
}

func (o CursorPages) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Page != nil {
		toSerialize["page"] = o.Page
	}
	if o.Next != nil {
		toSerialize["next"] = o.Next
	}
	if o.Previous != nil {
		toSerialize["previous"] = o.Previous
	}
	if o.Last != nil {
		toSerialize["last"] = o.Last
	}
	if o.PerPage != nil {
		toSerialize["perPage"] = o.PerPage
	}
	if true {
		toSerialize["totalItems"] = o.TotalItems
	}
	return json.Marshal(toSerialize)
}

type NullableCursorPages struct {
	value *CursorPages
	isSet bool
}

func (v NullableCursorPages) Get() *CursorPages {
	return v.value
}

func (v *NullableCursorPages) Set(val *CursorPages) {
	v.value = val
	v.isSet = true
}

func (v NullableCursorPages) IsSet() bool {
	return v.isSet
}

func (v *NullableCursorPages) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCursorPages(val *CursorPages) *NullableCursorPages {
	return &NullableCursorPages{value: val, isSet: true}
}

func (v NullableCursorPages) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCursorPages) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


