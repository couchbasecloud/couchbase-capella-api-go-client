/*
Couchbase Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package couchbasecapella

import (
	"encoding/json"
)

// AzureProviderSettings struct for AzureProviderSettings
type AzureProviderSettings struct {
	ResourceGroupName *string `json:"resourceGroupName,omitempty"`
	Region *AzureRegions `json:"region,omitempty"`
	AksClusterName *string `json:"aksClusterName,omitempty"`
	DnsPrefix *string `json:"dnsPrefix,omitempty"`
	DefaultNodePoolName *string `json:"defaultNodePoolName,omitempty"`
	Tags *map[string]string `json:"tags,omitempty"`
	VNetCidr *string `json:"vNetCidr,omitempty"`
	VNetName *string `json:"vNetName,omitempty"`
	StorageAccountName *string `json:"storageAccountName,omitempty"`
	ConfigContainerName *string `json:"configContainerName,omitempty"`
	ImportContainerName *string `json:"importContainerName,omitempty"`
	AvailabilityZones *[]string `json:"availabilityZones,omitempty"`
	AzCount *int32 `json:"azCount,omitempty"`
	DeploymentName *string `json:"deploymentName,omitempty"`
	MsiName *string `json:"msiName,omitempty"`
	TenantId *string `json:"tenantId,omitempty"`
	SubscriptionId *string `json:"subscriptionId,omitempty"`
}

// NewAzureProviderSettings instantiates a new AzureProviderSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureProviderSettings() *AzureProviderSettings {
	this := AzureProviderSettings{}
	return &this
}

// NewAzureProviderSettingsWithDefaults instantiates a new AzureProviderSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureProviderSettingsWithDefaults() *AzureProviderSettings {
	this := AzureProviderSettings{}
	return &this
}

// GetResourceGroupName returns the ResourceGroupName field value if set, zero value otherwise.
func (o *AzureProviderSettings) GetResourceGroupName() string {
	if o == nil || o.ResourceGroupName == nil {
		var ret string
		return ret
	}
	return *o.ResourceGroupName
}

// GetResourceGroupNameOk returns a tuple with the ResourceGroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProviderSettings) GetResourceGroupNameOk() (*string, bool) {
	if o == nil || o.ResourceGroupName == nil {
		return nil, false
	}
	return o.ResourceGroupName, true
}

// HasResourceGroupName returns a boolean if a field has been set.
func (o *AzureProviderSettings) HasResourceGroupName() bool {
	if o != nil && o.ResourceGroupName != nil {
		return true
	}

	return false
}

// SetResourceGroupName gets a reference to the given string and assigns it to the ResourceGroupName field.
func (o *AzureProviderSettings) SetResourceGroupName(v string) {
	o.ResourceGroupName = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *AzureProviderSettings) GetRegion() AzureRegions {
	if o == nil || o.Region == nil {
		var ret AzureRegions
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProviderSettings) GetRegionOk() (*AzureRegions, bool) {
	if o == nil || o.Region == nil {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *AzureProviderSettings) HasRegion() bool {
	if o != nil && o.Region != nil {
		return true
	}

	return false
}

// SetRegion gets a reference to the given AzureRegions and assigns it to the Region field.
func (o *AzureProviderSettings) SetRegion(v AzureRegions) {
	o.Region = &v
}

// GetAksClusterName returns the AksClusterName field value if set, zero value otherwise.
func (o *AzureProviderSettings) GetAksClusterName() string {
	if o == nil || o.AksClusterName == nil {
		var ret string
		return ret
	}
	return *o.AksClusterName
}

// GetAksClusterNameOk returns a tuple with the AksClusterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProviderSettings) GetAksClusterNameOk() (*string, bool) {
	if o == nil || o.AksClusterName == nil {
		return nil, false
	}
	return o.AksClusterName, true
}

// HasAksClusterName returns a boolean if a field has been set.
func (o *AzureProviderSettings) HasAksClusterName() bool {
	if o != nil && o.AksClusterName != nil {
		return true
	}

	return false
}

// SetAksClusterName gets a reference to the given string and assigns it to the AksClusterName field.
func (o *AzureProviderSettings) SetAksClusterName(v string) {
	o.AksClusterName = &v
}

// GetDnsPrefix returns the DnsPrefix field value if set, zero value otherwise.
func (o *AzureProviderSettings) GetDnsPrefix() string {
	if o == nil || o.DnsPrefix == nil {
		var ret string
		return ret
	}
	return *o.DnsPrefix
}

// GetDnsPrefixOk returns a tuple with the DnsPrefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProviderSettings) GetDnsPrefixOk() (*string, bool) {
	if o == nil || o.DnsPrefix == nil {
		return nil, false
	}
	return o.DnsPrefix, true
}

// HasDnsPrefix returns a boolean if a field has been set.
func (o *AzureProviderSettings) HasDnsPrefix() bool {
	if o != nil && o.DnsPrefix != nil {
		return true
	}

	return false
}

// SetDnsPrefix gets a reference to the given string and assigns it to the DnsPrefix field.
func (o *AzureProviderSettings) SetDnsPrefix(v string) {
	o.DnsPrefix = &v
}

// GetDefaultNodePoolName returns the DefaultNodePoolName field value if set, zero value otherwise.
func (o *AzureProviderSettings) GetDefaultNodePoolName() string {
	if o == nil || o.DefaultNodePoolName == nil {
		var ret string
		return ret
	}
	return *o.DefaultNodePoolName
}

// GetDefaultNodePoolNameOk returns a tuple with the DefaultNodePoolName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProviderSettings) GetDefaultNodePoolNameOk() (*string, bool) {
	if o == nil || o.DefaultNodePoolName == nil {
		return nil, false
	}
	return o.DefaultNodePoolName, true
}

// HasDefaultNodePoolName returns a boolean if a field has been set.
func (o *AzureProviderSettings) HasDefaultNodePoolName() bool {
	if o != nil && o.DefaultNodePoolName != nil {
		return true
	}

	return false
}

// SetDefaultNodePoolName gets a reference to the given string and assigns it to the DefaultNodePoolName field.
func (o *AzureProviderSettings) SetDefaultNodePoolName(v string) {
	o.DefaultNodePoolName = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *AzureProviderSettings) GetTags() map[string]string {
	if o == nil || o.Tags == nil {
		var ret map[string]string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProviderSettings) GetTagsOk() (*map[string]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *AzureProviderSettings) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given map[string]string and assigns it to the Tags field.
func (o *AzureProviderSettings) SetTags(v map[string]string) {
	o.Tags = &v
}

// GetVNetCidr returns the VNetCidr field value if set, zero value otherwise.
func (o *AzureProviderSettings) GetVNetCidr() string {
	if o == nil || o.VNetCidr == nil {
		var ret string
		return ret
	}
	return *o.VNetCidr
}

// GetVNetCidrOk returns a tuple with the VNetCidr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProviderSettings) GetVNetCidrOk() (*string, bool) {
	if o == nil || o.VNetCidr == nil {
		return nil, false
	}
	return o.VNetCidr, true
}

// HasVNetCidr returns a boolean if a field has been set.
func (o *AzureProviderSettings) HasVNetCidr() bool {
	if o != nil && o.VNetCidr != nil {
		return true
	}

	return false
}

// SetVNetCidr gets a reference to the given string and assigns it to the VNetCidr field.
func (o *AzureProviderSettings) SetVNetCidr(v string) {
	o.VNetCidr = &v
}

// GetVNetName returns the VNetName field value if set, zero value otherwise.
func (o *AzureProviderSettings) GetVNetName() string {
	if o == nil || o.VNetName == nil {
		var ret string
		return ret
	}
	return *o.VNetName
}

// GetVNetNameOk returns a tuple with the VNetName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProviderSettings) GetVNetNameOk() (*string, bool) {
	if o == nil || o.VNetName == nil {
		return nil, false
	}
	return o.VNetName, true
}

// HasVNetName returns a boolean if a field has been set.
func (o *AzureProviderSettings) HasVNetName() bool {
	if o != nil && o.VNetName != nil {
		return true
	}

	return false
}

// SetVNetName gets a reference to the given string and assigns it to the VNetName field.
func (o *AzureProviderSettings) SetVNetName(v string) {
	o.VNetName = &v
}

// GetStorageAccountName returns the StorageAccountName field value if set, zero value otherwise.
func (o *AzureProviderSettings) GetStorageAccountName() string {
	if o == nil || o.StorageAccountName == nil {
		var ret string
		return ret
	}
	return *o.StorageAccountName
}

// GetStorageAccountNameOk returns a tuple with the StorageAccountName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProviderSettings) GetStorageAccountNameOk() (*string, bool) {
	if o == nil || o.StorageAccountName == nil {
		return nil, false
	}
	return o.StorageAccountName, true
}

// HasStorageAccountName returns a boolean if a field has been set.
func (o *AzureProviderSettings) HasStorageAccountName() bool {
	if o != nil && o.StorageAccountName != nil {
		return true
	}

	return false
}

// SetStorageAccountName gets a reference to the given string and assigns it to the StorageAccountName field.
func (o *AzureProviderSettings) SetStorageAccountName(v string) {
	o.StorageAccountName = &v
}

// GetConfigContainerName returns the ConfigContainerName field value if set, zero value otherwise.
func (o *AzureProviderSettings) GetConfigContainerName() string {
	if o == nil || o.ConfigContainerName == nil {
		var ret string
		return ret
	}
	return *o.ConfigContainerName
}

// GetConfigContainerNameOk returns a tuple with the ConfigContainerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProviderSettings) GetConfigContainerNameOk() (*string, bool) {
	if o == nil || o.ConfigContainerName == nil {
		return nil, false
	}
	return o.ConfigContainerName, true
}

// HasConfigContainerName returns a boolean if a field has been set.
func (o *AzureProviderSettings) HasConfigContainerName() bool {
	if o != nil && o.ConfigContainerName != nil {
		return true
	}

	return false
}

// SetConfigContainerName gets a reference to the given string and assigns it to the ConfigContainerName field.
func (o *AzureProviderSettings) SetConfigContainerName(v string) {
	o.ConfigContainerName = &v
}

// GetImportContainerName returns the ImportContainerName field value if set, zero value otherwise.
func (o *AzureProviderSettings) GetImportContainerName() string {
	if o == nil || o.ImportContainerName == nil {
		var ret string
		return ret
	}
	return *o.ImportContainerName
}

// GetImportContainerNameOk returns a tuple with the ImportContainerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProviderSettings) GetImportContainerNameOk() (*string, bool) {
	if o == nil || o.ImportContainerName == nil {
		return nil, false
	}
	return o.ImportContainerName, true
}

// HasImportContainerName returns a boolean if a field has been set.
func (o *AzureProviderSettings) HasImportContainerName() bool {
	if o != nil && o.ImportContainerName != nil {
		return true
	}

	return false
}

// SetImportContainerName gets a reference to the given string and assigns it to the ImportContainerName field.
func (o *AzureProviderSettings) SetImportContainerName(v string) {
	o.ImportContainerName = &v
}

// GetAvailabilityZones returns the AvailabilityZones field value if set, zero value otherwise.
func (o *AzureProviderSettings) GetAvailabilityZones() []string {
	if o == nil || o.AvailabilityZones == nil {
		var ret []string
		return ret
	}
	return *o.AvailabilityZones
}

// GetAvailabilityZonesOk returns a tuple with the AvailabilityZones field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProviderSettings) GetAvailabilityZonesOk() (*[]string, bool) {
	if o == nil || o.AvailabilityZones == nil {
		return nil, false
	}
	return o.AvailabilityZones, true
}

// HasAvailabilityZones returns a boolean if a field has been set.
func (o *AzureProviderSettings) HasAvailabilityZones() bool {
	if o != nil && o.AvailabilityZones != nil {
		return true
	}

	return false
}

// SetAvailabilityZones gets a reference to the given []string and assigns it to the AvailabilityZones field.
func (o *AzureProviderSettings) SetAvailabilityZones(v []string) {
	o.AvailabilityZones = &v
}

// GetAzCount returns the AzCount field value if set, zero value otherwise.
func (o *AzureProviderSettings) GetAzCount() int32 {
	if o == nil || o.AzCount == nil {
		var ret int32
		return ret
	}
	return *o.AzCount
}

// GetAzCountOk returns a tuple with the AzCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProviderSettings) GetAzCountOk() (*int32, bool) {
	if o == nil || o.AzCount == nil {
		return nil, false
	}
	return o.AzCount, true
}

// HasAzCount returns a boolean if a field has been set.
func (o *AzureProviderSettings) HasAzCount() bool {
	if o != nil && o.AzCount != nil {
		return true
	}

	return false
}

// SetAzCount gets a reference to the given int32 and assigns it to the AzCount field.
func (o *AzureProviderSettings) SetAzCount(v int32) {
	o.AzCount = &v
}

// GetDeploymentName returns the DeploymentName field value if set, zero value otherwise.
func (o *AzureProviderSettings) GetDeploymentName() string {
	if o == nil || o.DeploymentName == nil {
		var ret string
		return ret
	}
	return *o.DeploymentName
}

// GetDeploymentNameOk returns a tuple with the DeploymentName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProviderSettings) GetDeploymentNameOk() (*string, bool) {
	if o == nil || o.DeploymentName == nil {
		return nil, false
	}
	return o.DeploymentName, true
}

// HasDeploymentName returns a boolean if a field has been set.
func (o *AzureProviderSettings) HasDeploymentName() bool {
	if o != nil && o.DeploymentName != nil {
		return true
	}

	return false
}

// SetDeploymentName gets a reference to the given string and assigns it to the DeploymentName field.
func (o *AzureProviderSettings) SetDeploymentName(v string) {
	o.DeploymentName = &v
}

// GetMsiName returns the MsiName field value if set, zero value otherwise.
func (o *AzureProviderSettings) GetMsiName() string {
	if o == nil || o.MsiName == nil {
		var ret string
		return ret
	}
	return *o.MsiName
}

// GetMsiNameOk returns a tuple with the MsiName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProviderSettings) GetMsiNameOk() (*string, bool) {
	if o == nil || o.MsiName == nil {
		return nil, false
	}
	return o.MsiName, true
}

// HasMsiName returns a boolean if a field has been set.
func (o *AzureProviderSettings) HasMsiName() bool {
	if o != nil && o.MsiName != nil {
		return true
	}

	return false
}

// SetMsiName gets a reference to the given string and assigns it to the MsiName field.
func (o *AzureProviderSettings) SetMsiName(v string) {
	o.MsiName = &v
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *AzureProviderSettings) GetTenantId() string {
	if o == nil || o.TenantId == nil {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProviderSettings) GetTenantIdOk() (*string, bool) {
	if o == nil || o.TenantId == nil {
		return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *AzureProviderSettings) HasTenantId() bool {
	if o != nil && o.TenantId != nil {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *AzureProviderSettings) SetTenantId(v string) {
	o.TenantId = &v
}

// GetSubscriptionId returns the SubscriptionId field value if set, zero value otherwise.
func (o *AzureProviderSettings) GetSubscriptionId() string {
	if o == nil || o.SubscriptionId == nil {
		var ret string
		return ret
	}
	return *o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProviderSettings) GetSubscriptionIdOk() (*string, bool) {
	if o == nil || o.SubscriptionId == nil {
		return nil, false
	}
	return o.SubscriptionId, true
}

// HasSubscriptionId returns a boolean if a field has been set.
func (o *AzureProviderSettings) HasSubscriptionId() bool {
	if o != nil && o.SubscriptionId != nil {
		return true
	}

	return false
}

// SetSubscriptionId gets a reference to the given string and assigns it to the SubscriptionId field.
func (o *AzureProviderSettings) SetSubscriptionId(v string) {
	o.SubscriptionId = &v
}

func (o AzureProviderSettings) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResourceGroupName != nil {
		toSerialize["resourceGroupName"] = o.ResourceGroupName
	}
	if o.Region != nil {
		toSerialize["region"] = o.Region
	}
	if o.AksClusterName != nil {
		toSerialize["aksClusterName"] = o.AksClusterName
	}
	if o.DnsPrefix != nil {
		toSerialize["dnsPrefix"] = o.DnsPrefix
	}
	if o.DefaultNodePoolName != nil {
		toSerialize["defaultNodePoolName"] = o.DefaultNodePoolName
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.VNetCidr != nil {
		toSerialize["vNetCidr"] = o.VNetCidr
	}
	if o.VNetName != nil {
		toSerialize["vNetName"] = o.VNetName
	}
	if o.StorageAccountName != nil {
		toSerialize["storageAccountName"] = o.StorageAccountName
	}
	if o.ConfigContainerName != nil {
		toSerialize["configContainerName"] = o.ConfigContainerName
	}
	if o.ImportContainerName != nil {
		toSerialize["importContainerName"] = o.ImportContainerName
	}
	if o.AvailabilityZones != nil {
		toSerialize["availabilityZones"] = o.AvailabilityZones
	}
	if o.AzCount != nil {
		toSerialize["azCount"] = o.AzCount
	}
	if o.DeploymentName != nil {
		toSerialize["deploymentName"] = o.DeploymentName
	}
	if o.MsiName != nil {
		toSerialize["msiName"] = o.MsiName
	}
	if o.TenantId != nil {
		toSerialize["tenantId"] = o.TenantId
	}
	if o.SubscriptionId != nil {
		toSerialize["subscriptionId"] = o.SubscriptionId
	}
	return json.Marshal(toSerialize)
}

type NullableAzureProviderSettings struct {
	value *AzureProviderSettings
	isSet bool
}

func (v NullableAzureProviderSettings) Get() *AzureProviderSettings {
	return v.value
}

func (v *NullableAzureProviderSettings) Set(val *AzureProviderSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureProviderSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureProviderSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureProviderSettings(val *AzureProviderSettings) *NullableAzureProviderSettings {
	return &NullableAzureProviderSettings{value: val, isSet: true}
}

func (v NullableAzureProviderSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureProviderSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


