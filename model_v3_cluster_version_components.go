/*
Couchbase Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package couchbasecapella

import (
	"encoding/json"
)

// V3ClusterVersionComponents struct for V3ClusterVersionComponents
type V3ClusterVersionComponents struct {
	CbServerVersion string `json:"cbServerVersion"`
}

// NewV3ClusterVersionComponents instantiates a new V3ClusterVersionComponents object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV3ClusterVersionComponents(cbServerVersion string) *V3ClusterVersionComponents {
	this := V3ClusterVersionComponents{}
	this.CbServerVersion = cbServerVersion
	return &this
}

// NewV3ClusterVersionComponentsWithDefaults instantiates a new V3ClusterVersionComponents object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV3ClusterVersionComponentsWithDefaults() *V3ClusterVersionComponents {
	this := V3ClusterVersionComponents{}
	return &this
}

// GetCbServerVersion returns the CbServerVersion field value
func (o *V3ClusterVersionComponents) GetCbServerVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CbServerVersion
}

// GetCbServerVersionOk returns a tuple with the CbServerVersion field value
// and a boolean to check if the value has been set.
func (o *V3ClusterVersionComponents) GetCbServerVersionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CbServerVersion, true
}

// SetCbServerVersion sets field value
func (o *V3ClusterVersionComponents) SetCbServerVersion(v string) {
	o.CbServerVersion = v
}

func (o V3ClusterVersionComponents) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["cbServerVersion"] = o.CbServerVersion
	}
	return json.Marshal(toSerialize)
}

type NullableV3ClusterVersionComponents struct {
	value *V3ClusterVersionComponents
	isSet bool
}

func (v NullableV3ClusterVersionComponents) Get() *V3ClusterVersionComponents {
	return v.value
}

func (v *NullableV3ClusterVersionComponents) Set(val *V3ClusterVersionComponents) {
	v.value = val
	v.isSet = true
}

func (v NullableV3ClusterVersionComponents) IsSet() bool {
	return v.isSet
}

func (v *NullableV3ClusterVersionComponents) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV3ClusterVersionComponents(val *V3ClusterVersionComponents) *NullableV3ClusterVersionComponents {
	return &NullableV3ClusterVersionComponents{value: val, isSet: true}
}

func (v NullableV3ClusterVersionComponents) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV3ClusterVersionComponents) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


