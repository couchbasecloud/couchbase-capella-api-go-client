/*
Couchbase Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package couchbasecapella

import (
	"encoding/json"
)

// BucketStats struct for BucketStats
type BucketStats struct {
	Status string `json:"status"`
	TotalCount int32 `json:"totalCount"`
	UnhealthyCount int32 `json:"unhealthyCount"`
	HealthStats map[string]string `json:"healthStats"`
}

// NewBucketStats instantiates a new BucketStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBucketStats(status string, totalCount int32, unhealthyCount int32, healthStats map[string]string) *BucketStats {
	this := BucketStats{}
	this.Status = status
	this.TotalCount = totalCount
	this.UnhealthyCount = unhealthyCount
	this.HealthStats = healthStats
	return &this
}

// NewBucketStatsWithDefaults instantiates a new BucketStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBucketStatsWithDefaults() *BucketStats {
	this := BucketStats{}
	return &this
}

// GetStatus returns the Status field value
func (o *BucketStats) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *BucketStats) GetStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *BucketStats) SetStatus(v string) {
	o.Status = v
}

// GetTotalCount returns the TotalCount field value
func (o *BucketStats) GetTotalCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value
// and a boolean to check if the value has been set.
func (o *BucketStats) GetTotalCountOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TotalCount, true
}

// SetTotalCount sets field value
func (o *BucketStats) SetTotalCount(v int32) {
	o.TotalCount = v
}

// GetUnhealthyCount returns the UnhealthyCount field value
func (o *BucketStats) GetUnhealthyCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.UnhealthyCount
}

// GetUnhealthyCountOk returns a tuple with the UnhealthyCount field value
// and a boolean to check if the value has been set.
func (o *BucketStats) GetUnhealthyCountOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.UnhealthyCount, true
}

// SetUnhealthyCount sets field value
func (o *BucketStats) SetUnhealthyCount(v int32) {
	o.UnhealthyCount = v
}

// GetHealthStats returns the HealthStats field value
func (o *BucketStats) GetHealthStats() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}

	return o.HealthStats
}

// GetHealthStatsOk returns a tuple with the HealthStats field value
// and a boolean to check if the value has been set.
func (o *BucketStats) GetHealthStatsOk() (*map[string]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.HealthStats, true
}

// SetHealthStats sets field value
func (o *BucketStats) SetHealthStats(v map[string]string) {
	o.HealthStats = v
}

func (o BucketStats) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["totalCount"] = o.TotalCount
	}
	if true {
		toSerialize["unhealthyCount"] = o.UnhealthyCount
	}
	if true {
		toSerialize["healthStats"] = o.HealthStats
	}
	return json.Marshal(toSerialize)
}

type NullableBucketStats struct {
	value *BucketStats
	isSet bool
}

func (v NullableBucketStats) Get() *BucketStats {
	return v.value
}

func (v *NullableBucketStats) Set(val *BucketStats) {
	v.value = val
	v.isSet = true
}

func (v NullableBucketStats) IsSet() bool {
	return v.isSet
}

func (v *NullableBucketStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBucketStats(val *BucketStats) *NullableBucketStats {
	return &NullableBucketStats{value: val, isSet: true}
}

func (v NullableBucketStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBucketStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


