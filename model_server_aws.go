/*
Couchbase Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package couchbasecloud

import (
	"encoding/json"
)

// ServerAws struct for ServerAws
type ServerAws struct {
	InstanceSize AwsInstances `json:"instanceSize"`
	EbsSizeGib int32 `json:"ebsSizeGib"`
}

// NewServerAws instantiates a new ServerAws object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServerAws(instanceSize AwsInstances, ebsSizeGib int32) *ServerAws {
	this := ServerAws{}
	this.InstanceSize = instanceSize
	this.EbsSizeGib = ebsSizeGib
	return &this
}

// NewServerAwsWithDefaults instantiates a new ServerAws object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServerAwsWithDefaults() *ServerAws {
	this := ServerAws{}
	return &this
}

// GetInstanceSize returns the InstanceSize field value
func (o *ServerAws) GetInstanceSize() AwsInstances {
	if o == nil {
		var ret AwsInstances
		return ret
	}

	return o.InstanceSize
}

// GetInstanceSizeOk returns a tuple with the InstanceSize field value
// and a boolean to check if the value has been set.
func (o *ServerAws) GetInstanceSizeOk() (*AwsInstances, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.InstanceSize, true
}

// SetInstanceSize sets field value
func (o *ServerAws) SetInstanceSize(v AwsInstances) {
	o.InstanceSize = v
}

// GetEbsSizeGib returns the EbsSizeGib field value
func (o *ServerAws) GetEbsSizeGib() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.EbsSizeGib
}

// GetEbsSizeGibOk returns a tuple with the EbsSizeGib field value
// and a boolean to check if the value has been set.
func (o *ServerAws) GetEbsSizeGibOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EbsSizeGib, true
}

// SetEbsSizeGib sets field value
func (o *ServerAws) SetEbsSizeGib(v int32) {
	o.EbsSizeGib = v
}

func (o ServerAws) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["instanceSize"] = o.InstanceSize
	}
	if true {
		toSerialize["ebsSizeGib"] = o.EbsSizeGib
	}
	return json.Marshal(toSerialize)
}

type NullableServerAws struct {
	value *ServerAws
	isSet bool
}

func (v NullableServerAws) Get() *ServerAws {
	return v.value
}

func (v *NullableServerAws) Set(val *ServerAws) {
	v.value = val
	v.isSet = true
}

func (v NullableServerAws) IsSet() bool {
	return v.isSet
}

func (v *NullableServerAws) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServerAws(val *ServerAws) *NullableServerAws {
	return &NullableServerAws{value: val, isSet: true}
}

func (v NullableServerAws) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServerAws) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


