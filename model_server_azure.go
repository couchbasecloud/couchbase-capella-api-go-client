/*
Couchbase Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package couchbasecapella

import (
	"encoding/json"
)

// ServerAzure struct for ServerAzure
type ServerAzure struct {
	InstanceSize AzureInstances `json:"instanceSize"`
	VolumeType AzureVolumeTypes `json:"volumeType"`
}

// NewServerAzure instantiates a new ServerAzure object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServerAzure(instanceSize AzureInstances, volumeType AzureVolumeTypes) *ServerAzure {
	this := ServerAzure{}
	this.InstanceSize = instanceSize
	this.VolumeType = volumeType
	return &this
}

// NewServerAzureWithDefaults instantiates a new ServerAzure object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServerAzureWithDefaults() *ServerAzure {
	this := ServerAzure{}
	return &this
}

// GetInstanceSize returns the InstanceSize field value
func (o *ServerAzure) GetInstanceSize() AzureInstances {
	if o == nil {
		var ret AzureInstances
		return ret
	}

	return o.InstanceSize
}

// GetInstanceSizeOk returns a tuple with the InstanceSize field value
// and a boolean to check if the value has been set.
func (o *ServerAzure) GetInstanceSizeOk() (*AzureInstances, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.InstanceSize, true
}

// SetInstanceSize sets field value
func (o *ServerAzure) SetInstanceSize(v AzureInstances) {
	o.InstanceSize = v
}

// GetVolumeType returns the VolumeType field value
func (o *ServerAzure) GetVolumeType() AzureVolumeTypes {
	if o == nil {
		var ret AzureVolumeTypes
		return ret
	}

	return o.VolumeType
}

// GetVolumeTypeOk returns a tuple with the VolumeType field value
// and a boolean to check if the value has been set.
func (o *ServerAzure) GetVolumeTypeOk() (*AzureVolumeTypes, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.VolumeType, true
}

// SetVolumeType sets field value
func (o *ServerAzure) SetVolumeType(v AzureVolumeTypes) {
	o.VolumeType = v
}

func (o ServerAzure) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["instanceSize"] = o.InstanceSize
	}
	if true {
		toSerialize["volumeType"] = o.VolumeType
	}
	return json.Marshal(toSerialize)
}

type NullableServerAzure struct {
	value *ServerAzure
	isSet bool
}

func (v NullableServerAzure) Get() *ServerAzure {
	return v.value
}

func (v *NullableServerAzure) Set(val *ServerAzure) {
	v.value = val
	v.isSet = true
}

func (v NullableServerAzure) IsSet() bool {
	return v.isSet
}

func (v *NullableServerAzure) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServerAzure(val *ServerAzure) *NullableServerAzure {
	return &NullableServerAzure{value: val, isSet: true}
}

func (v NullableServerAzure) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServerAzure) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


