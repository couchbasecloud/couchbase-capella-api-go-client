/*
Couchbase Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package couchbasecapella

import (
	"encoding/json"
)

// V3ClusterListData struct for V3ClusterListData
type V3ClusterListData struct {
	TenantId *string `json:"tenantId,omitempty"`
	Items *[]V3ClusterListDataItems `json:"items,omitempty"`
}

// NewV3ClusterListData instantiates a new V3ClusterListData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV3ClusterListData() *V3ClusterListData {
	this := V3ClusterListData{}
	return &this
}

// NewV3ClusterListDataWithDefaults instantiates a new V3ClusterListData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV3ClusterListDataWithDefaults() *V3ClusterListData {
	this := V3ClusterListData{}
	return &this
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *V3ClusterListData) GetTenantId() string {
	if o == nil || o.TenantId == nil {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3ClusterListData) GetTenantIdOk() (*string, bool) {
	if o == nil || o.TenantId == nil {
		return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *V3ClusterListData) HasTenantId() bool {
	if o != nil && o.TenantId != nil {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *V3ClusterListData) SetTenantId(v string) {
	o.TenantId = &v
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *V3ClusterListData) GetItems() []V3ClusterListDataItems {
	if o == nil || o.Items == nil {
		var ret []V3ClusterListDataItems
		return ret
	}
	return *o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3ClusterListData) GetItemsOk() (*[]V3ClusterListDataItems, bool) {
	if o == nil || o.Items == nil {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *V3ClusterListData) HasItems() bool {
	if o != nil && o.Items != nil {
		return true
	}

	return false
}

// SetItems gets a reference to the given []V3ClusterListDataItems and assigns it to the Items field.
func (o *V3ClusterListData) SetItems(v []V3ClusterListDataItems) {
	o.Items = &v
}

func (o V3ClusterListData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TenantId != nil {
		toSerialize["tenantId"] = o.TenantId
	}
	if o.Items != nil {
		toSerialize["items"] = o.Items
	}
	return json.Marshal(toSerialize)
}

type NullableV3ClusterListData struct {
	value *V3ClusterListData
	isSet bool
}

func (v NullableV3ClusterListData) Get() *V3ClusterListData {
	return v.value
}

func (v *NullableV3ClusterListData) Set(val *V3ClusterListData) {
	v.value = val
	v.isSet = true
}

func (v NullableV3ClusterListData) IsSet() bool {
	return v.isSet
}

func (v *NullableV3ClusterListData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV3ClusterListData(val *V3ClusterListData) *NullableV3ClusterListData {
	return &NullableV3ClusterListData{value: val, isSet: true}
}

func (v NullableV3ClusterListData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV3ClusterListData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


