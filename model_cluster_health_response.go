/*
Couchbase Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package couchbasecapella

import (
	"encoding/json"
)

// ClusterHealthResponse struct for ClusterHealthResponse
type ClusterHealthResponse struct {
	Status ClusterStatus `json:"status"`
	Health ClusterHealth `json:"health"`
	BucketStats *BucketStats `json:"bucketStats,omitempty"`
	NodeStats *NodeStats `json:"nodeStats,omitempty"`
}

// NewClusterHealthResponse instantiates a new ClusterHealthResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterHealthResponse(status ClusterStatus, health ClusterHealth) *ClusterHealthResponse {
	this := ClusterHealthResponse{}
	this.Status = status
	this.Health = health
	return &this
}

// NewClusterHealthResponseWithDefaults instantiates a new ClusterHealthResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterHealthResponseWithDefaults() *ClusterHealthResponse {
	this := ClusterHealthResponse{}
	return &this
}

// GetStatus returns the Status field value
func (o *ClusterHealthResponse) GetStatus() ClusterStatus {
	if o == nil {
		var ret ClusterStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *ClusterHealthResponse) GetStatusOk() (*ClusterStatus, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *ClusterHealthResponse) SetStatus(v ClusterStatus) {
	o.Status = v
}

// GetHealth returns the Health field value
func (o *ClusterHealthResponse) GetHealth() ClusterHealth {
	if o == nil {
		var ret ClusterHealth
		return ret
	}

	return o.Health
}

// GetHealthOk returns a tuple with the Health field value
// and a boolean to check if the value has been set.
func (o *ClusterHealthResponse) GetHealthOk() (*ClusterHealth, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Health, true
}

// SetHealth sets field value
func (o *ClusterHealthResponse) SetHealth(v ClusterHealth) {
	o.Health = v
}

// GetBucketStats returns the BucketStats field value if set, zero value otherwise.
func (o *ClusterHealthResponse) GetBucketStats() BucketStats {
	if o == nil || o.BucketStats == nil {
		var ret BucketStats
		return ret
	}
	return *o.BucketStats
}

// GetBucketStatsOk returns a tuple with the BucketStats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterHealthResponse) GetBucketStatsOk() (*BucketStats, bool) {
	if o == nil || o.BucketStats == nil {
		return nil, false
	}
	return o.BucketStats, true
}

// HasBucketStats returns a boolean if a field has been set.
func (o *ClusterHealthResponse) HasBucketStats() bool {
	if o != nil && o.BucketStats != nil {
		return true
	}

	return false
}

// SetBucketStats gets a reference to the given BucketStats and assigns it to the BucketStats field.
func (o *ClusterHealthResponse) SetBucketStats(v BucketStats) {
	o.BucketStats = &v
}

// GetNodeStats returns the NodeStats field value if set, zero value otherwise.
func (o *ClusterHealthResponse) GetNodeStats() NodeStats {
	if o == nil || o.NodeStats == nil {
		var ret NodeStats
		return ret
	}
	return *o.NodeStats
}

// GetNodeStatsOk returns a tuple with the NodeStats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterHealthResponse) GetNodeStatsOk() (*NodeStats, bool) {
	if o == nil || o.NodeStats == nil {
		return nil, false
	}
	return o.NodeStats, true
}

// HasNodeStats returns a boolean if a field has been set.
func (o *ClusterHealthResponse) HasNodeStats() bool {
	if o != nil && o.NodeStats != nil {
		return true
	}

	return false
}

// SetNodeStats gets a reference to the given NodeStats and assigns it to the NodeStats field.
func (o *ClusterHealthResponse) SetNodeStats(v NodeStats) {
	o.NodeStats = &v
}

func (o ClusterHealthResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["health"] = o.Health
	}
	if o.BucketStats != nil {
		toSerialize["bucketStats"] = o.BucketStats
	}
	if o.NodeStats != nil {
		toSerialize["nodeStats"] = o.NodeStats
	}
	return json.Marshal(toSerialize)
}

type NullableClusterHealthResponse struct {
	value *ClusterHealthResponse
	isSet bool
}

func (v NullableClusterHealthResponse) Get() *ClusterHealthResponse {
	return v.value
}

func (v *NullableClusterHealthResponse) Set(val *ClusterHealthResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterHealthResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterHealthResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterHealthResponse(val *ClusterHealthResponse) *NullableClusterHealthResponse {
	return &NullableClusterHealthResponse{value: val, isSet: true}
}

func (v NullableClusterHealthResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterHealthResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


