/*
Couchbase Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package couchbasecapella

import (
	"encoding/json"
)

// V3ClusterPlace struct for V3ClusterPlace
type V3ClusterPlace struct {
	Provider string `json:"provider"`
	Region string `json:"region"`
	CIDR string `json:"CIDR"`
}

// NewV3ClusterPlace instantiates a new V3ClusterPlace object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV3ClusterPlace(provider string, region string, cIDR string) *V3ClusterPlace {
	this := V3ClusterPlace{}
	this.Provider = provider
	this.Region = region
	this.CIDR = cIDR
	return &this
}

// NewV3ClusterPlaceWithDefaults instantiates a new V3ClusterPlace object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV3ClusterPlaceWithDefaults() *V3ClusterPlace {
	this := V3ClusterPlace{}
	return &this
}

// GetProvider returns the Provider field value
func (o *V3ClusterPlace) GetProvider() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Provider
}

// GetProviderOk returns a tuple with the Provider field value
// and a boolean to check if the value has been set.
func (o *V3ClusterPlace) GetProviderOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Provider, true
}

// SetProvider sets field value
func (o *V3ClusterPlace) SetProvider(v string) {
	o.Provider = v
}

// GetRegion returns the Region field value
func (o *V3ClusterPlace) GetRegion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Region
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
func (o *V3ClusterPlace) GetRegionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Region, true
}

// SetRegion sets field value
func (o *V3ClusterPlace) SetRegion(v string) {
	o.Region = v
}

// GetCIDR returns the CIDR field value
func (o *V3ClusterPlace) GetCIDR() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CIDR
}

// GetCIDROk returns a tuple with the CIDR field value
// and a boolean to check if the value has been set.
func (o *V3ClusterPlace) GetCIDROk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CIDR, true
}

// SetCIDR sets field value
func (o *V3ClusterPlace) SetCIDR(v string) {
	o.CIDR = v
}

func (o V3ClusterPlace) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["provider"] = o.Provider
	}
	if true {
		toSerialize["region"] = o.Region
	}
	if true {
		toSerialize["CIDR"] = o.CIDR
	}
	return json.Marshal(toSerialize)
}

type NullableV3ClusterPlace struct {
	value *V3ClusterPlace
	isSet bool
}

func (v NullableV3ClusterPlace) Get() *V3ClusterPlace {
	return v.value
}

func (v *NullableV3ClusterPlace) Set(val *V3ClusterPlace) {
	v.value = val
	v.isSet = true
}

func (v NullableV3ClusterPlace) IsSet() bool {
	return v.isSet
}

func (v *NullableV3ClusterPlace) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV3ClusterPlace(val *V3ClusterPlace) *NullableV3ClusterPlace {
	return &NullableV3ClusterPlace{value: val, isSet: true}
}

func (v NullableV3ClusterPlace) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV3ClusterPlace) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


